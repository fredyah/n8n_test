{
  "name": "MCP_Server",
  "nodes": [
    {
      "parameters": {
        "path": "23d34c6e-000f-45f7-abee-57cfe1f705c0"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 1,
      "position": [
        -240,
        -60
      ],
      "id": "3fc49968-3480-467f-80e0-f2d08452c18d",
      "name": "MCP Server Trigger",
      "webhookId": "23d34c6e-000f-45f7-abee-57cfe1f705c0",
      "notesInFlow": false
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        -240,
        220
      ],
      "id": "916dec3d-834f-4bfd-a60e-d73ecd6243d0",
      "name": "Calculator"
    },
    {
      "parameters": {
        "name": "get_date_info",
        "description": "Retrieve the dates for yesterday, today, and tomorrow in the format YYYY-MM-DD.",
        "language": "python",
        "pythonCode": "from datetime import datetime, timedelta\n\n# 接收 input\ninput_text = query.strip().lower()\n\n# 現在日期\ntoday = datetime.now().date()\nyesterday = today - timedelta(days=1)\ntomorrow = today + timedelta(days=1)\n\n# 根據 input_text 決定回傳什麼\nif \"今天\" in input_text or \"today\" in input_text:\n    answer = f\"Today is {today.isoformat()}.\"\nelif \"昨天\" in input_text or \"yesterday\" in input_text:\n    answer = f\"Yesterday was {yesterday.isoformat()}.\"\nelif \"明天\" in input_text or \"tomorrow\" in input_text:\n    answer = f\"Tomorrow will be {tomorrow.isoformat()}.\"\nelse:\n    # 如果 input 不標準，就全部回傳\n    answer = (\n        f\"Yesterday was {yesterday.isoformat()}, \"\n        f\"Today is {today.isoformat()}, \"\n        f\"and Tomorrow will be {tomorrow.isoformat()}.\"\n    )\n\n# 最後一定要 return 純文字字串\nreturn answer"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.1,
      "position": [
        80,
        200
      ],
      "id": "701728e6-a419-429b-9716-ea1053ea700d",
      "name": "getdateinfo",
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "Get the week weather forecast. Provide only the city name",
        "url": "http://172.17.0.1:8000/get_weather",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "input"
            }
          ]
        },
        "optimizeResponse": true
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -80,
        220
      ],
      "id": "77aa7193-510a-4b35-baef-55f6e0df005b",
      "name": "week weather",
      "notesInFlow": false,
      "notes": "Get the week weather forecast. Provide only the city name as a string"
    }
  ],
  "pinData": {},
  "connections": {
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "getdateinfo": {
      "ai_tool": [
        []
      ]
    },
    "week weather": {
      "ai_tool": [
        []
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f9313ff1-6be7-4392-adff-e37adcd53321",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b0d565854921eeae02e02c830b7ca9129b767b96f301ef1f4a0ce3dea9231efa"
  },
  "id": "MhuiElqPLPknVBfw",
  "tags": []
}